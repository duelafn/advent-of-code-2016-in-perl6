#!/usr/bin/perl -w
use strict; use warnings; use 5.014;

sub dragon {
    my $b = reverse($_[0]);
    $b =~ tr/01/10/;
    return $_[0] . "0" . $b;
}

sub dragon_stretch {
    my ($a, $length) = @_;
    $a = dragon($a) while length($a) < $length;
    return substr($a, 0, $length);
}

sub checksum {
    state $subs = { "00" => "1", "11" => "1", "01" => "0", "10" => "0" };
    my $str = shift;
    $str =~ s/(..)/$$subs{$1}/ge until length($str) % 2;
    return $str;
}

my ($length, $initial) = @ARGV;
say checksum(dragon_stretch($initial, $length));
