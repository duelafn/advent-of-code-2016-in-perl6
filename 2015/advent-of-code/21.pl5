#!/usr/bin/perl -w
use strict; use warnings; use 5.014;
use Method::Signatures::Simple;
use Data::Dump 'pp';
use YAML::XS;
use Test::More;
use List::Util qw/ min sum /;
use Sort::Key::Maker sort1 => sub { $$_[0], $$_[3]{cost} },  qw(integer integer);
use Sort::Key::Maker ii_sort => qw(integer integer);

sub fight {
    my @p = @_;
    my @hp = map $_->{hp}, @p;
    my ($a, $d) = (0, 1);
    while (1) {
        my $damage = $p[$a]{damage} - $p[$d]{armor};
        $damage = 1 if $damage < 1;
        $hp[$d] -= $damage;
        return ($a, @hp) if $hp[$d] <= 0;
        ($a, $d) = ($d, $a);
    }
}

sub load {
    my $type;
    my %shop;
    for (<DATA>) {
        chomp;
        my @row = split /  +/;
        next unless @row > 3;
        if ($row[0] =~ s/://) {
            $type = $row[0];
        } else {
            push @{$shop{$type}}, { name => $row[0], cost => $row[1], damage => $row[2], armor => $row[3] };
        }
    }
    return \%shop;
}

sub MAIN {
    my $shop = load();
    push @{$$shop{Armor}}, { qw/ name none  cost 0  damage 0  armor 0 / };
    push @{$$shop{Rings}}, { qw/ name none  cost 0  damage 0  armor 0 / };
    my $self  = { hp => 100, damage => 0, armor => 0 };
    my $enemy = { hp => 109, damage => 8, armor => 2 };

    my @rv;
    my $R = $#{$$shop{Rings}};
    for my $w (@{$$shop{Weapons}}) {
        for my $a (@{$$shop{Armor}}) {
            for my $i (0..$R) {
                my $r1 = $$shop{Rings}[$i];
                for my $j (min($i+1, $R)..$R) {
                    my $r2 = $$shop{Rings}[$j];
                    my %me = %$self;
                    $me{cost}   = sum(map $$_{cost},   $w, $a, $r1, $r2);
                    $me{damage} = sum(map $$_{damage}, $w, $a, $r1, $r2);
                    $me{armor}  = sum(map $$_{armor},  $w, $a, $r1, $r2);
                    my ($win, $hp1, $hp2) = fight(\%me, $enemy);
                    push @rv, [ $win, $hp1, $hp2, \%me ];
                }
            }
        }
    }

    ii_sort_inplace { $$_[0], $$_[3]{cost} } @rv;
    say pp $rv[0];

    ii_sort_inplace { -$$_[0], -$$_[3]{cost} } @rv;
    say pp $rv[0];
}

MAIN(@ARGV);


__DATA__
Weapons:    Cost  Damage  Armor
Dagger        8     4       0
Shortsword   10     5       0
Warhammer    25     6       0
Longsword    40     7       0
Greataxe     74     8       0

Armor:      Cost  Damage  Armor
Leather      13     0       1
Chainmail    31     0       2
Splintmail   53     0       3
Bandedmail   75     0       4
Platemail   102     0       5

Rings:      Cost  Damage  Armor
Damage +1    25     1       0
Damage +2    50     2       0
Damage +3   100     3       0
Defense +1   20     0       1
Defense +2   40     0       2
Defense +3   80     0       3
